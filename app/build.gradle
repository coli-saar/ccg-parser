

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'antlr'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
}

compileJava   {
    sourceCompatibility = '1.9'
    targetCompatibility = '1.9'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {url 'https://jitpack.io'}
    mavenLocal()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    implementation 'com.github.coli-saar:basics:ea1f49bea6' //9b78dde236d924e696671b586d7e6eb09309f253'
//    implementation 'de.saar.coli:basics:1.2.41-SNAPSHOT'

    antlr "org.antlr:antlr4:4.5"

    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'me.tongfei:progressbar:0.10.0'

}

application {
    // Define the main class for the application.
    mainClass = 'de.saar.coli.ccgparser.App'
}

mainClassName = 'de.saar.coli.ccgparser.App'

// task fatJar(type: Jar) {
//     manifest {
//         attributes 'Main-Class': 'de.saar.coli.ccgparser.App'
//     }
//     archiveBaseName = 'ccg-parser'
//     duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//     from { (configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) } } {
//         exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
//     }
//     // from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//     with jar
// }
