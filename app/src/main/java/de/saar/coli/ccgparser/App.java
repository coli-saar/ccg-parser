/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.saar.coli.ccgparser;

import com.fasterxml.jackson.databind.ObjectMapper;
import de.up.ling.tree.Tree;

import java.io.File;
import java.io.IOException;

public class App {
    public static void main(String[] args) throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        WordWithSupertags[][] allTaggedSentences = mapper.readValue(new File("ccg-supertagger/supertags.json"), WordWithSupertags[][].class);

        // ASSUMPTION - supertags for each word are presented in order of descending score (best first)
        for( WordWithSupertags[] sentence : allTaggedSentences ) {
            for( WordWithSupertags word : sentence ) {
                int i = 0;
                for( SupertagWithScore tag : word.supertags ) {
                    tag.setPositionInSupertagList(i++);
                }
            }
        }

        UnaryRules unaryRules = UnaryRules.load(new File("unary_rules.txt"));

        Tree<String> parseTree = null;

        for( int i = 0; i < 10; i++ ) {
            long start = System.nanoTime();
            Parser parser = new Parser(allTaggedSentences[0], unaryRules);
            parseTree = parser.parse();
            long end = System.nanoTime();
            System.err.printf("%d Î¼s\n", (end-start)/1000);
        }

        System.err.println(parseTree);
        parseTree.draw().setVisible(true);
    }
}
